# 4
# link- https://pentester.land/list-of-bug-bounty-writeups.html

'''
Articles to be fetched won't be crossing 1 page in what I am implementing
'''

# imports
import os
import datetime

# external imports
from pymongo import MongoClient
from bs4 import BeautifulSoup as soup
import requests

# DB setup
URI = os.getenv('MONGODB_URL')
client = MongoClient(URI)
db = client['hackArticles']
pentester_land_articles = db['pentester_land']


# Bot send message function
def send_message(API_KEY, CHAT_ID, message):
    url = "https://api.telegram.org/bot{}/sendMessage?chat_id={}&text={}".format(API_KEY, CHAT_ID, message)
    send = requests.get(url)
    
    return send.status_code

##################################################################SCRAPER CODE####################################
'''
url
scraper
result
'''
articles = [] # nested list of [title, url]

URL = 'https://pentester.land/list-of-bug-bounty-writeups.html'

def scraper():
    html = requests.get('https://pentester.land/list-of-bug-bounty-writeups.html').text
    page_soup = soup(html, 'html.parser')

    site_name = page_soup.title.text
    
    raw_articles = page_soup.findAll('tr')[1:]

    for raw_article in raw_articles:
        article = raw_article.findAll('td')
        try:
            articles.append([article[0].text, article[2].text, article[3].text, article[4].text, article[0].a['href']]) # Title, BBP. Vulnerability, Reward, Link
        except:
            pass
    message = {
        'site_name': site_name,
        'articles': articles
    }

    return message

def result(API_KEY, CHAT_ID):
    try:
        articles = scraper().get('articles')
        for article in articles[:10]: # I am sure they are not adding more than 10 at a time ^_^
            if pentester_land_articles.find_one({'title': article[0], 'CHAT_ID':CHAT_ID}) is None: # add in the database and send to telegram
                pentester_land_articles.insert_one({
                    'title': article[0],
                    'BBP': article[1],
                    'Vulnerability': article[2],
                    'Reward': article[3],
                    'url': article[4],
                    'CHAT_ID': CHAT_ID,
                    "date": datetime.datetime.utcnow()
                })

                message = article[4].replace('/', '%2F') + '''\n\nTitle: {}\n\nReward: {}'''.format(article[0], article[3])
                print(send_message(API_KEY, CHAT_ID, message))

    except Exception as e:
        print('[!] Failure for pentester land articles')
        print(str(e))

##################################################################SCRAPER CODE####################################